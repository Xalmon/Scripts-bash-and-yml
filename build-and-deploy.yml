name: Deploy to Dev Environment

on:
  push:
    branches: ['dev', 'main', 'prod-support', 'uat']
  pull_request:
    branches: ['dev', 'main', 'prod-support', 'uat']

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  EMAILS: 'PutALLemails.com, ThisIsDformat '

jobs:

  build-and-analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest
    outputs:
      sonarqube_url_set: ${{ steps.get_sonarqube_url.outputs.sonarqube_url_set }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install
        
      - name: Run build
        run: npm run build
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
          
      - name: Get SonarQube URL
        id: get_sonarqube_url
        if: always()
        run: echo "sonarqube_url_set=true" >> $GITHUB_OUTPUT

  send_notification:
    name: Send Email Notification
    needs: [build-and-analyze]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        run: |
          # Define your project name
          PROJECT_NAME="e-meca-next-frontend"
      
          # Get the short commit hash as a tag
          echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
          # Determine the branch name: either from github.head_ref or using git rev-parse
          if [ -n "${{ github.head_ref }}" ]; then
            echo "BRANCH_NAME=${{ github.head_ref }}" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          fi
      
          # Get the commit author
          echo "COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an <%ae>')" >> $GITHUB_ENV
      
          # Sanitize the full commit message to remove newlines and special characters
          sanitized_commit_message=$(git log -1 --pretty=%B | tr -d '\n' | tr -d '\r')
          echo "COMMIT_MESSAGE=${sanitized_commit_message}" >> $GITHUB_ENV
      
          # Create a custom tag with ProjectName-BranchName-CommitMessageSummary
          commit_message_summary=$(git log -1 --pretty=%s | tr -d '\n' | tr -d '\r')  
          CUSTOM_TAG="${PROJECT_NAME}-${BRANCH_NAME}-${commit_message_summary// /_}"  
          echo "TAG=${CUSTOM_TAG}" >> $GITHUB_ENV

        
      - name: Send build success email notification
        if: success()
        env:
          SMTP_SERVER: semicolon.africa
          SMTP_PORT: 465
          SMTP_USERNAME: builds@semicolon.africa
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        run: |
          echo "Sending success email..."
          chmod +x .github/workflows/scripts/send_success_email.sh
          .github/workflows/scripts/send_success_email.sh \
            "$SMTP_SERVER" \
            "$SMTP_PORT" \
            "$SMTP_USERNAME" \
            "$SMTP_PASSWORD" \
            "${{ env.EMAILS }}" \
            "${{ env.TAG }}" \
            "${{ env.BRANCH_NAME }}" \
            "${{ env.COMMIT_AUTHOR }}" \
            "${{ needs.build-and-analyze.outputs.sonarqube_url_set }}" \
            "$BUILD_REPORT_URL_SET" \
            "$AUTOMATION_TEST_URL_SET" \
            "${{ env.COMMIT_MESSAGE }}"
            
      - name: Send build failure email notification
        if: failure()
        env:
          SMTP_SERVER: semicolon.africa
          SMTP_PORT: 465
          SMTP_USERNAME: builds@semicolon.africa
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        run: |
          echo "Sending failure email..."
          chmod +x .github/workflows/scripts/send_failure_email.sh
          .github/workflows/scripts/send_failure_email.sh \
            "$SMTP_SERVER" \
            "$SMTP_PORT" \
            "$SMTP_USERNAME" \
            "$SMTP_PASSWORD" \
            "${{ env.EMAILS }}" \
            "${{ env.TAG }}" \
            "${{ env.BRANCH_NAME }}" \
            "${{ env.COMMIT_AUTHOR }}" \
            "${{ needs.build-and-analyze.outputs.sonarqube_url_set }}" \
            "$BUILD_REPORT_URL_SET" \
            "$AUTOMATION_TEST_URL_SET" \
            "${{ env.COMMIT_MESSAGE }}"